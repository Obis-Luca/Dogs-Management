{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nfunction serverHealthCheck(setServerState) {\n  _s();\n  useEffect(() => {\n    const checkServerHealth = () => {\n      fetch(\"http://localhost:5000/api/serverhealth\").then(() => setServerState(true)).catch(error => {\n        console.log(\"Error checking server health: \" + error);\n        setServerState(false);\n      });\n    };\n    checkServerHealth();\n    const intervalId = setInterval(checkServerHealth, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n}\n_s(serverHealthCheck, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction checkServerOnline(setIsOnline) {\n  _s2();\n  useEffect(() => {\n    window.addEventListener(\"online\", () => setIsOnline(true));\n    window.addEventListener(\"offline\", () => setIsOnline(false));\n    return () => {\n      window.removeEventListener(\"online\", () => setIsOnline(true));\n      window.removeEventListener(\"offline\", () => setIsOnline(false));\n    };\n  }, []);\n}\n_s2(checkServerOnline, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default {\n  serverHealthCheck,\n  checkServerOnline\n};","map":{"version":3,"names":["useEffect","serverHealthCheck","setServerState","_s","checkServerHealth","fetch","then","catch","error","console","log","intervalId","setInterval","clearInterval","checkServerOnline","setIsOnline","_s2","window","addEventListener","removeEventListener"],"sources":["D:/FMI/fmi_an2(SEM2)/MPP/FrontEnd/crud_react/REACT_CRUD/src/ServerHealthApi.js"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nfunction serverHealthCheck(setServerState) {\r\n\tuseEffect(() => {\r\n\t\tconst checkServerHealth = () => {\r\n\t\t\tfetch(\"http://localhost:5000/api/serverhealth\")\r\n\t\t\t\t.then(() => setServerState(true))\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error checking server health: \" + error);\r\n\t\t\t\t\tsetServerState(false);\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tcheckServerHealth();\r\n\t\tconst intervalId = setInterval(checkServerHealth, 2000);\r\n\t\treturn () => clearInterval(intervalId);\r\n\t}, []);\r\n}\r\n\r\nfunction checkServerOnline(setIsOnline) {\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"online\", () => setIsOnline(true));\r\n\t\twindow.addEventListener(\"offline\", () => setIsOnline(false));\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"online\", () => setIsOnline(true));\r\n\t\t\twindow.removeEventListener(\"offline\", () => setIsOnline(false));\r\n\t\t};\r\n\t}, []);\r\n}\r\n\r\nexport default { serverHealthCheck, checkServerOnline };\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,iBAAiBA,CAACC,cAAc,EAAE;EAAAC,EAAA;EAC1CH,SAAS,CAAC,MAAM;IACf,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;MAC/BC,KAAK,CAAC,wCAAwC,CAAC,CAC7CC,IAAI,CAAC,MAAMJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAChCK,KAAK,CAAEC,KAAK,IAAK;QACjBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAGF,KAAK,CAAC;QACrDN,cAAc,CAAC,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;IAEDE,iBAAiB,CAAC,CAAC;IACnB,MAAMO,UAAU,GAAGC,WAAW,CAACR,iBAAiB,EAAE,IAAI,CAAC;IACvD,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;AACP;AAACR,EAAA,CAfQF,iBAAiB;AAiB1B,SAASa,iBAAiBA,CAACC,WAAW,EAAE;EAAAC,GAAA;EACvChB,SAAS,CAAC,MAAM;IACfiB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAMH,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1DE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,MAAMH,WAAW,CAAC,KAAK,CAAC,CAAC;IAE5D,OAAO,MAAM;MACZE,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,MAAMJ,WAAW,CAAC,IAAI,CAAC,CAAC;MAC7DE,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAE,MAAMJ,WAAW,CAAC,KAAK,CAAC,CAAC;IAChE,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;AACP;AAACC,GAAA,CAVQF,iBAAiB;AAY1B,eAAe;EAAEb,iBAAiB;EAAEa;AAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}