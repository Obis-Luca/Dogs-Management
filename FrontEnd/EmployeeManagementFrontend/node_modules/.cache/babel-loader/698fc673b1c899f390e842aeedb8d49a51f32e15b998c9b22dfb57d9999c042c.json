{"ast":null,"code":"var _jsxFileName = \"D:\\\\FMI\\\\fmi_an2(SEM2)\\\\MPP\\\\FrontEnd\\\\Test\\\\test_crud\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InputForm from './components/InputForm';\nimport UserList from './components/UserList';\nimport UserDetail from './components/UserDetail';\nimport UserEdit from './components/UserEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users from API\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('https://api.example.com/users');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Create a new user\n  const addUser = async userData => {\n    try {\n      const response = await fetch('https://api.example.com/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      setUsers([...users, data]);\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n\n  // Update an existing user\n  const updateUser = async userData => {\n    try {\n      const response = await fetch(`https://api.example.com/users/${userData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const updatedUser = await response.json();\n      const updatedUsers = users.map(user => user.id === updatedUser.id ? updatedUser : user);\n      setUsers(updatedUsers);\n      setSelectedUser(null);\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  // Delete a user\n  const deleteUser = async userId => {\n    try {\n      await fetch(`https://api.example.com/users/${userId}`, {\n        method: 'DELETE'\n      });\n      const updatedUsers = users.filter(user => user.id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      addUser: addUser,\n      updateUser: updateUser,\n      initialData: {\n        id: '',\n        name: '',\n        dob: '',\n        address: ''\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      viewUser: setSelectedUser,\n      editUser: setSelectedUser,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UserDetail, {\n        user: selectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserEdit, {\n        user: selectedUser,\n        updateUser: updateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aU/UUDZLN6ztfpIOEYlZQ+VCkZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","InputForm","UserList","UserDetail","UserEdit","jsxDEV","_jsxDEV","App","_s","users","setUsers","selectedUser","setSelectedUser","fetchUsers","response","fetch","data","json","error","console","addUser","userData","method","headers","body","JSON","stringify","updateUser","id","updatedUser","updatedUsers","map","user","deleteUser","userId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","initialData","name","dob","address","viewUser","editUser","_c","$RefreshReg$"],"sources":["D:/FMI/fmi_an2(SEM2)/MPP/FrontEnd/Test/test_crud/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InputForm from './components/InputForm';\nimport UserList from './components/UserList';\nimport UserDetail from './components/UserDetail';\nimport UserEdit from './components/UserEdit';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users from API\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('https://api.example.com/users');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Create a new user\n  const addUser = async (userData) => {\n    try {\n      const response = await fetch('https://api.example.com/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n      const data = await response.json();\n      setUsers([...users, data]);\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n\n  // Update an existing user\n  const updateUser = async (userData) => {\n    try {\n      const response = await fetch(`https://api.example.com/users/${userData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n      const updatedUser = await response.json();\n      const updatedUsers = users.map((user) =>\n        user.id === updatedUser.id ? updatedUser : user\n      );\n      setUsers(updatedUsers);\n      setSelectedUser(null);\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  // Delete a user\n  const deleteUser = async (userId) => {\n    try {\n      await fetch(`https://api.example.com/users/${userId}`, {\n        method: 'DELETE',\n      });\n      const updatedUsers = users.filter((user) => user.id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>CRUD Application</h1>\n      <InputForm addUser={addUser} updateUser={updateUser} initialData={{ id: '', name: '', dob: '', address: '' }} />\n      <UserList users={users} viewUser={setSelectedUser} editUser={setSelectedUser} deleteUser={deleteUser} />\n      {selectedUser ? (\n        <div>\n          <UserDetail user={selectedUser} />\n          <UserEdit user={selectedUser} updateUser={updateUser} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}