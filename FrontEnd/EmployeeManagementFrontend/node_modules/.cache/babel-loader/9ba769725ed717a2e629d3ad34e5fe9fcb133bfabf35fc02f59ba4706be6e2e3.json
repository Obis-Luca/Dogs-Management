{"ast":null,"code":"var _jsxFileName = \"D:\\\\FMI\\\\fmi_an2(SEM2)\\\\MPP\\\\FrontEnd\\\\crud_react\\\\REACT_CRUD\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport { ArrayContext } from \"../App\";\nimport \"../styles/Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChart = () => {\n  _s();\n  const [array, _] = useContext(ArrayContext);\n  const [ageGroups, setAgeGroups] = useState([]);\n  const [averageSalaries, setAverageSalaries] = useState([]);\n  const chartRef = useRef(null);\n\n  //Function for creating the chart content\n  useEffect(() => {\n    const ageGroupsArray = [];\n    const averageSalariesArray = [];\n    for (let i = 1; i <= 10; i++) {\n      const lowerBound = (i - 1) * 10 + 1;\n      const upperBound = i * 10;\n      const filteredData = array.filter(item => item.Age >= lowerBound && item.Age <= upperBound);\n      const salaries = filteredData.map(item => item.Salary);\n      const averageSalary = salaries.reduce((acc, curr) => acc + curr, 0) / salaries.length;\n      ageGroupsArray.push(`${lowerBound}-${upperBound}`);\n      averageSalariesArray.push(averageSalary);\n    }\n    setAgeGroups(ageGroupsArray);\n    setAverageSalaries(averageSalariesArray);\n\n    // Cleanup previous chart\n    const chartInstance = chartRef.current;\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n\n    // Create new chart\n    const ctx = chartRef.current.getContext(\"2d\");\n    const newChartInstance = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: ageGroupsArray,\n        datasets: [{\n          label: \"Age-Salary Comparison\",\n          data: averageSalariesArray\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: \"category\"\n          }\n        }\n      }\n    });\n\n    // Store chart instance for cleanup\n    chartRef.current = newChartInstance;\n  }, [array]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"chart-button\",\n        children: \" Go Back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n_s(MyChart, \"FpxPCKSMo5MczEZSiexgWqkLwR8=\");\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["useContext","useEffect","useState","useRef","Button","Link","Bar","ArrayContext","jsxDEV","_jsxDEV","MyChart","_s","array","_","ageGroups","setAgeGroups","averageSalaries","setAverageSalaries","chartRef","ageGroupsArray","averageSalariesArray","i","lowerBound","upperBound","filteredData","filter","item","Age","salaries","map","Salary","averageSalary","reduce","acc","curr","length","push","chartInstance","current","destroy","ctx","getContext","newChartInstance","Chart","type","data","labels","datasets","label","options","scales","x","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/FMI/fmi_an2(SEM2)/MPP/FrontEnd/crud_react/REACT_CRUD/src/components/Chart.js"],"sourcesContent":["import { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { ArrayContext } from \"../App\";\r\nimport \"../styles/Chart.css\";\r\n\r\nconst MyChart = () => {\r\n\tconst [array, _] = useContext(ArrayContext);\r\n\tconst [ageGroups, setAgeGroups] = useState([]);\r\n\tconst [averageSalaries, setAverageSalaries] = useState([]);\r\n\tconst chartRef = useRef(null);\r\n\r\n\t//Function for creating the chart content\r\n\tuseEffect(() => {\r\n\t\tconst ageGroupsArray = [];\r\n\t\tconst averageSalariesArray = [];\r\n\r\n\t\tfor (let i = 1; i <= 10; i++) {\r\n\t\t\tconst lowerBound = (i - 1) * 10 + 1;\r\n\t\t\tconst upperBound = i * 10;\r\n\t\t\tconst filteredData = array.filter((item) => item.Age >= lowerBound && item.Age <= upperBound);\r\n\t\t\tconst salaries = filteredData.map((item) => item.Salary);\r\n\t\t\tconst averageSalary = salaries.reduce((acc, curr) => acc + curr, 0) / salaries.length;\r\n\t\t\tageGroupsArray.push(`${lowerBound}-${upperBound}`);\r\n\t\t\taverageSalariesArray.push(averageSalary);\r\n\t\t}\r\n\r\n\t\tsetAgeGroups(ageGroupsArray);\r\n\t\tsetAverageSalaries(averageSalariesArray);\r\n\r\n\t\t// Cleanup previous chart\r\n\t\tconst chartInstance = chartRef.current;\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.destroy();\r\n\t\t}\r\n\r\n\t\t// Create new chart\r\n\t\tconst ctx = chartRef.current.getContext(\"2d\");\r\n\t\tconst newChartInstance = new Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: ageGroupsArray,\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Age-Salary Comparison\",\r\n\t\t\t\t\t\tdata: averageSalariesArray,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// Store chart instance for cleanup\r\n\t\tchartRef.current = newChartInstance;\r\n\t}, [array]);\r\n\r\n\treturn (\r\n\t\t<div className=\"chart-container\">\r\n\t\t\t<Link to=\"/home\">\r\n\t\t\t\t<Button className=\"chart-button\"> Go Back </Button>\r\n\t\t\t</Link>\r\n\t\t\t<canvas ref={chartRef}></canvas>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}