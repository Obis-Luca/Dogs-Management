{"ast":null,"code":"var _jsxFileName = \"D:\\\\FMI\\\\fmi_an2(SEM2)\\\\MPP\\\\FrontEnd\\\\crud_react\\\\REACT_CRUD\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, LinearScale, CategoryScale } from 'chart.js/auto';\nimport { Context } from '../App';\nimport '../styles/Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChart = () => {\n  _s();\n  const [array, _] = useContext(Context);\n  const [ageGroups, setAgeGroups] = useState([]);\n  const [averageSalaries, setAverageSalaries] = useState([]);\n\n  //Function for creating the chart content\n  useEffect(() => {\n    const ageGroupsArray = [];\n    const averageSalariesArray = [];\n    for (let i = 1; i <= 10; i++) {\n      const lowerBound = (i - 1) * 10 + 1;\n      const upperBound = i * 10;\n      const filteredData = array.filter(item => item.Age >= lowerBound && item.Age <= upperBound);\n      const salaries = filteredData.map(item => item.Salary);\n      const averageSalary = salaries.reduce((acc, curr) => acc + curr, 0) / salaries.length;\n      ageGroupsArray.push(`${lowerBound}-${upperBound}`);\n      averageSalariesArray.push(averageSalary);\n    }\n    setAgeGroups(ageGroupsArray);\n    setAverageSalaries(averageSalariesArray);\n  }, [array]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"chart-button\",\n        children: \" Go Back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ageGroups,\n        datasets: [{\n          label: \"Age-Salary Comparison\",\n          data: averageSalaries\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            type: 'linear',\n            // Use 'linear' scale type\n            beginAtZero: true\n          },\n          x: {\n            type: 'category' // Use 'category' scale type\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChart, \"VvmM+1q0VWBjdxntt5cwiG5GAJ8=\");\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["useContext","useEffect","useState","Button","Link","Bar","Chart","LinearScale","CategoryScale","Context","jsxDEV","_jsxDEV","MyChart","_s","array","_","ageGroups","setAgeGroups","averageSalaries","setAverageSalaries","ageGroupsArray","averageSalariesArray","i","lowerBound","upperBound","filteredData","filter","item","Age","salaries","map","Salary","averageSalary","reduce","acc","curr","length","push","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","label","options","scales","y","type","beginAtZero","x","_c","$RefreshReg$"],"sources":["D:/FMI/fmi_an2(SEM2)/MPP/FrontEnd/crud_react/REACT_CRUD/src/components/Chart.js"],"sourcesContent":["import { useContext, useEffect, useState} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, LinearScale, CategoryScale } from 'chart.js/auto';\r\nimport { Context } from '../App';\r\nimport '../styles/Chart.css';\r\n\r\nconst MyChart = () => {\r\n    const [array, _] = useContext(Context);\r\n    const [ageGroups, setAgeGroups] = useState([]);\r\n    const [averageSalaries, setAverageSalaries] = useState([]);\r\n\r\n    //Function for creating the chart content\r\n    useEffect(() => {\r\n        const ageGroupsArray = [];\r\n        const averageSalariesArray = [];\r\n\r\n        for (let i = 1; i <= 10; i++) {\r\n            const lowerBound = (i - 1) * 10 + 1;\r\n            const upperBound = i * 10;\r\n            const filteredData = array.filter(item => item.Age >= lowerBound && item.Age <= upperBound);\r\n            const salaries = filteredData.map(item => item.Salary);\r\n            const averageSalary = salaries.reduce((acc, curr) => acc + curr, 0) / salaries.length;\r\n            ageGroupsArray.push(`${lowerBound}-${upperBound}`);\r\n            averageSalariesArray.push(averageSalary);\r\n        }\r\n\r\n        setAgeGroups(ageGroupsArray);\r\n        setAverageSalaries(averageSalariesArray);\r\n    }, [array]);\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Link to='/'>\r\n                <Button className=\"chart-button\"> Go Back </Button>\r\n            </Link>\r\n            <Bar\r\n                data={{\r\n                    labels: ageGroups,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Age-Salary Comparison\",\r\n                            data: averageSalaries,\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    scales: {\r\n                        y: {\r\n                            type: 'linear', // Use 'linear' scale type\r\n                            beginAtZero: true,\r\n                        },\r\n                        x: {\r\n                            type: 'category', // Use 'category' scale type\r\n                        }\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}